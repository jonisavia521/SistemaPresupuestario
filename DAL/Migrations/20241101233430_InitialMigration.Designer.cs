// <auto-generated />
using System;
using DAL.Implementation.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(SistemaPresupuestarioContext))]
    [Migration("20241101233430_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("CodigoCliente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Cuit")
                        .HasColumnName("CUIT")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DireccionComercial")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DireccionLegal")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("IdProvincia")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("IdVendedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localidad")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RazonSocial")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.ClienteImpuesto", b =>
                {
                    b.Property<Guid>("IdImpuesto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoImpuesto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdImpuesto", "IdTipoImpuesto", "IdCliente");

                    b.HasIndex("IdCliente")
                        .HasName("IXFK_Cliente_Impuesto_Cliente");

                    b.HasIndex("IdImpuesto")
                        .HasName("IXFK_Cliente_Impuesto_Impuesto");

                    b.HasIndex("IdTipoImpuesto")
                        .HasName("IXFK_Cliente_Impuesto_TipoImpuesto");

                    b.ToTable("Cliente_Impuesto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.ComprobanteDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime?>("FechaMovimiento")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IdComprobante")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProducto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ImporteNeto")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("NumeroComprobante")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("PrecioNeto")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Renglon")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TipoComprobante")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdComprobante");

                    b.HasIndex("IdProducto");

                    b.ToTable("Comprobante_Detalle");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Comprobantes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FechaMovimiento")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVendedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ImporteGravado")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal?>("ImporteIva")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("NumeroComprobante")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TipoComprobante")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Comprobantes");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Familia", b =>
                {
                    b.Property<Guid>("IdFamilia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdFamilia")
                        .HasName("PK__Familia__751F80CFFEC2F220");

                    b.ToTable("Familia");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.FamiliaFamilia", b =>
                {
                    b.Property<Guid>("IdFamilia")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<Guid>("IdFamiliaHijo")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdFamilia", "IdFamiliaHijo")
                        .HasName("PK__Familia___ABFCC67E1F707C2E");

                    b.HasIndex("IdFamiliaHijo");

                    b.ToTable("Familia_Familia");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.FamiliaPatente", b =>
                {
                    b.Property<Guid>("IdFamilia")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<Guid>("IdPatente")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdFamilia", "IdPatente")
                        .HasName("PK__FamiliaE__166FEEA61367E606");

                    b.HasIndex("IdPatente");

                    b.ToTable("Familia_Patente");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Impuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<double>("Alicuota")
                        .HasColumnType("float");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("IdProvincia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoImpuesto")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia")
                        .HasName("IXFK_Impuesto_Provincia");

                    b.HasIndex("IdTipoImpuesto")
                        .HasName("IXFK_Impuesto_TipoImpuesto");

                    b.ToTable("Impuesto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Patente", b =>
                {
                    b.Property<Guid>("IdPatente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.Property<string>("Vista")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.HasKey("IdPatente")
                        .HasName("PK__Patente__9F4EF95C34290DD0");

                    b.ToTable("Patente");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Presupuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPresupuestoPadre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVendedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPresupuestoPadre");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Presupuesto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.PresupuestoDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<Guid?>("IdPresupuesto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProducto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("Renglon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPresupuesto");

                    b.HasIndex("IdProducto");

                    b.ToTable("Presupuesto_Detalle");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime");

                    b.Property<int?>("UsuarioAlta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Provincia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("CodigoAfip")
                        .HasColumnName("CodigoAFIP")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.TipoImpuesto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<bool?>("Definible")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TipoImpuesto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Clave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usuario")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF970075BCE6");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.UsuarioFamilia", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<Guid>("IdFamilia")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdUsuario", "IdFamilia")
                        .HasName("PK__Usuario___BC34479B87709AFE");

                    b.HasIndex("IdFamilia");

                    b.ToTable("Usuario_Familia");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.UsuarioPatente", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<Guid>("IdPatente")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("rowversion");

                    b.HasKey("IdUsuario", "IdPatente");

                    b.HasIndex("IdPatente");

                    b.ToTable("Usuario_Patente");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Vendedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Cliente", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Vendedor", "IdVendedorNavigation")
                        .WithMany("Cliente")
                        .HasForeignKey("IdVendedor")
                        .HasConstraintName("FK_Cliente");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.ClienteImpuesto", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Impuesto", "IdImpuestoNavigation")
                        .WithMany("ClienteImpuesto")
                        .HasForeignKey("IdImpuesto")
                        .HasConstraintName("FK_Cliente_Impuesto_Impuesto")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.TipoImpuesto", "IdTipoImpuestoNavigation")
                        .WithMany("ClienteImpuesto")
                        .HasForeignKey("IdTipoImpuesto")
                        .HasConstraintName("FK_Cliente_Impuesto_TipoImpuesto")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.ComprobanteDetalle", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Comprobantes", "IdComprobanteNavigation")
                        .WithMany("ComprobanteDetalle")
                        .HasForeignKey("IdComprobante")
                        .HasConstraintName("FK_Comprobante_Detalle_Comprobantes")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Producto", "IdProductoNavigation")
                        .WithMany("ComprobanteDetalle")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Comprobante_Detalle_Producto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Comprobantes", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Cliente", "IdClienteNavigation")
                        .WithMany("Comprobantes")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Comprobantes_Cliente");

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Vendedor", "IdVendedorNavigation")
                        .WithMany("Comprobantes")
                        .HasForeignKey("IdVendedor")
                        .HasConstraintName("FK_Comprobantes_Vendedor");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.FamiliaFamilia", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Familia", "IdFamiliaNavigation")
                        .WithMany("FamiliaFamiliaIdFamiliaNavigation")
                        .HasForeignKey("IdFamilia")
                        .HasConstraintName("FK__Familia_F__IdFam__7C4F7684")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Familia", "IdFamiliaHijoNavigation")
                        .WithMany("FamiliaFamiliaIdFamiliaHijoNavigation")
                        .HasForeignKey("IdFamiliaHijo")
                        .HasConstraintName("FK__Familia_A__Famil__37A5467C")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.FamiliaPatente", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Familia", "IdFamiliaNavigation")
                        .WithMany("FamiliaPatente")
                        .HasForeignKey("IdFamilia")
                        .HasConstraintName("FK_Familia_Patente_Familia")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Patente", "IdPatenteNavigation")
                        .WithMany("FamiliaPatente")
                        .HasForeignKey("IdPatente")
                        .HasConstraintName("FK_FamiliaElement_Patente")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Impuesto", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Provincia", "IdProvinciaNavigation")
                        .WithMany("Impuesto")
                        .HasForeignKey("IdProvincia")
                        .HasConstraintName("FK_Impuesto_Provincia");

                    b.HasOne("DAL.Implementation.EntityFramework.Context.TipoImpuesto", "IdTipoImpuestoNavigation")
                        .WithMany("Impuesto")
                        .HasForeignKey("IdTipoImpuesto")
                        .HasConstraintName("FK_Impuesto_TipoImpuesto")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.Presupuesto", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Cliente", "IdClienteNavigation")
                        .WithMany("Presupuesto")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Presupuesto_Cliente")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Presupuesto", "IdPresupuestoPadreNavigation")
                        .WithMany("InverseIdPresupuestoPadreNavigation")
                        .HasForeignKey("IdPresupuestoPadre")
                        .HasConstraintName("FK_Presupuesto_Presupuesto");

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Vendedor", "IdVendedorNavigation")
                        .WithMany("Presupuesto")
                        .HasForeignKey("IdVendedor")
                        .HasConstraintName("FK_Presupuesto_Vendedor");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.PresupuestoDetalle", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Presupuesto", "IdPresupuestoNavigation")
                        .WithMany("PresupuestoDetalle")
                        .HasForeignKey("IdPresupuesto")
                        .HasConstraintName("FK_Presupuesto_Detalle_Presupuesto");

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Producto", "IdProductoNavigation")
                        .WithMany("PresupuestoDetalle")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Presupuesto_Detalle_Producto");
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.UsuarioFamilia", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Familia", "IdFamiliaNavigation")
                        .WithMany("UsuarioFamilia")
                        .HasForeignKey("IdFamilia")
                        .HasConstraintName("FK__Usuario_P__Famil__35BCFE0A")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioFamilia")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Usuario_F__IdUsu__7F2BE32F")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Implementation.EntityFramework.Context.UsuarioPatente", b =>
                {
                    b.HasOne("DAL.Implementation.EntityFramework.Context.Patente", "IdPatenteNavigation")
                        .WithMany("UsuarioPatente")
                        .HasForeignKey("IdPatente")
                        .HasConstraintName("FK_Usuario_Patente_Patente")
                        .IsRequired();

                    b.HasOne("DAL.Implementation.EntityFramework.Context.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioPatente")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Usuario_Patente_Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
